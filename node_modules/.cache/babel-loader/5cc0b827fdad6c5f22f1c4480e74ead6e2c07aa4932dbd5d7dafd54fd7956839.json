{"ast":null,"code":"var _jsxFileName = \"/Users/justin/portfolio/src/examples/Navbars/DefaultNavbar/index.js\",\n  _s = $RefreshSig$();\n/* eslint-disable no-param-reassign */\n/**\n=========================================================\n* Material Kit 2 React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-kit-react\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { Fragment, useState, useEffect } from \"react\";\n\n// react-router components\nimport { Link } from \"react-router-dom\";\n\n// prop-types is a library for typechecking of props.\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Container from \"@mui/material/Container\";\nimport Icon from \"@mui/material/Icon\";\nimport Popper from \"@mui/material/Popper\";\nimport Grow from \"@mui/material/Grow\";\nimport Grid from \"@mui/material/Grid\";\nimport Divider from \"@mui/material/Divider\";\nimport MuiLink from \"@mui/material/Link\";\n\n// Material Kit 2 React components\nimport MKBox from \"components/MKBox\";\nimport MKTypography from \"components/MKTypography\";\nimport MKButton from \"components/MKButton\";\n\n// Material Kit 2 React example components\nimport DefaultNavbarDropdown from \"examples/Navbars/DefaultNavbar/DefaultNavbarDropdown\";\nimport DefaultNavbarMobile from \"examples/Navbars/DefaultNavbar/DefaultNavbarMobile\";\n\n// Material Kit 2 React base styles\nimport breakpoints from \"assets/theme/base/breakpoints\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DefaultNavbar({\n  brand,\n  routes,\n  transparent,\n  light,\n  action,\n  sticky,\n  relative,\n  center\n}) {\n  _s();\n  const [dropdown, setDropdown] = useState(\"\");\n  const [dropdownEl, setDropdownEl] = useState(\"\");\n  const [dropdownName, setDropdownName] = useState(\"\");\n  const [nestedDropdown, setNestedDropdown] = useState(\"\");\n  const [nestedDropdownEl, setNestedDropdownEl] = useState(\"\");\n  const [nestedDropdownName, setNestedDropdownName] = useState(\"\");\n  const [arrowRef, setArrowRef] = useState(null);\n  const [mobileNavbar, setMobileNavbar] = useState(false);\n  const [mobileView, setMobileView] = useState(false);\n  const openMobileNavbar = () => setMobileNavbar(!mobileNavbar);\n  useEffect(() => {\n    // A function that sets the display state for the DefaultNavbarMobile.\n    function displayMobileNavbar() {\n      if (window.innerWidth < breakpoints.values.lg) {\n        setMobileView(true);\n        setMobileNavbar(false);\n      } else {\n        setMobileView(false);\n        setMobileNavbar(false);\n      }\n    }\n\n    /** \n     The event listener that's calling the displayMobileNavbar function when \n     resizing the window.\n    */\n    window.addEventListener(\"resize\", displayMobileNavbar);\n\n    // Call the displayMobileNavbar function to set the state with the initial value.\n    displayMobileNavbar();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", displayMobileNavbar);\n  }, []);\n  const renderNavbarItems = routes.map(({\n    name,\n    icon,\n    href,\n    route,\n    collapse\n  }) => /*#__PURE__*/_jsxDEV(DefaultNavbarDropdown, {\n    name: name,\n    icon: icon,\n    href: href,\n    route: route,\n    collapse: Boolean(collapse),\n    onMouseEnter: ({\n      currentTarget\n    }) => {\n      if (collapse) {\n        setDropdown(currentTarget);\n        setDropdownEl(currentTarget);\n        setDropdownName(name);\n      }\n    },\n    onMouseLeave: () => collapse && setDropdown(null),\n    light: light\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this));\n\n  // Render the routes on the dropdown menu\n  // const renderRoutes = routes.map(({ name, collapse, columns, rowsPerColumn }) => {\n  //   let template;\n\n  //   // Render the dropdown menu that should be display as columns\n  //   if (collapse && columns && name === dropdownName) {\n  //     const calculateColumns = collapse.reduce((resultArray, item, index) => {\n  //       const chunkIndex = Math.floor(index / rowsPerColumn);\n\n  //       if (!resultArray[chunkIndex]) {\n  //         resultArray[chunkIndex] = [];\n  //       }\n\n  //       resultArray[chunkIndex].push(item);\n\n  //       return resultArray;\n  //     }, []);\n\n  //     template = (\n  //       <Grid key={name} container spacing={3} py={1} px={1.5}>\n  //         {calculateColumns.map((cols, key) => {\n  //           const gridKey = `grid-${key}`;\n  //           const dividerKey = `divider-${key}`;\n\n  //           return (\n  //             <Grid key={gridKey} item xs={12 / columns} sx={{ position: \"relative\" }}>\n  //               {cols.map((col, index) => (\n  //                 <Fragment key={col.name}>\n  //                   <MKTypography\n  //                     display=\"block\"\n  //                     variant=\"button\"\n  //                     fontWeight=\"bold\"\n  //                     textTransform=\"capitalize\"\n  //                     py={1}\n  //                     px={0.5}\n  //                     mt={index !== 0 ? 2 : 0}\n  //                   >\n  //                     {col.name}\n  //                   </MKTypography>\n  //                   {col.collapse.map((item) => (\n  //                     <MKTypography\n  //                       key={item.name}\n  //                       component={item.route ? Link : MuiLink}\n  //                       to={item.route ? item.route : \"\"}\n  //                       href={item.href ? item.href : (e) => e.preventDefault()}\n  //                       target={item.href ? \"_blank\" : \"\"}\n  //                       rel={item.href ? \"noreferrer\" : \"noreferrer\"}\n  //                       minWidth=\"11.25rem\"\n  //                       display=\"block\"\n  //                       variant=\"button\"\n  //                       color=\"text\"\n  //                       textTransform=\"capitalize\"\n  //                       fontWeight=\"regular\"\n  //                       py={0.625}\n  //                       px={2}\n  //                       sx={({ palette: { grey, dark }, borders: { borderRadius } }) => ({\n  //                         borderRadius: borderRadius.md,\n  //                         cursor: \"pointer\",\n  //                         transition: \"all 300ms linear\",\n\n  //                         \"&:hover\": {\n  //                           backgroundColor: grey[200],\n  //                           color: dark.main,\n  //                         },\n  //                       })}\n  //                     >\n  //                       {item.name}\n  //                     </MKTypography>\n  //                   ))}\n  //                 </Fragment>\n  //               ))}\n  //               {key !== 0 && (\n  //                 <Divider\n  //                   key={dividerKey}\n  //                   orientation=\"vertical\"\n  //                   sx={{\n  //                     position: \"absolute\",\n  //                     top: \"50%\",\n  //                     left: \"-4px\",\n  //                     transform: \"translateY(-45%)\",\n  //                     height: \"90%\",\n  //                   }}\n  //                 />\n  //               )}\n  //             </Grid>\n  //           );\n  //         })}\n  //       </Grid>\n  //     );\n\n  //     // Render the dropdown menu that should be display as list items\n  //   } else if (collapse && name === dropdownName) {\n  //     template = collapse.map((item) => {\n  //       const linkComponent = {\n  //         component: MuiLink,\n  //         href: item.href,\n  //         target: \"_blank\",\n  //         rel: \"noreferrer\",\n  //       };\n\n  //       const routeComponent = {\n  //         component: Link,\n  //         to: item.route,\n  //       };\n\n  //       return (\n  //         <MKTypography\n  //           key={item.name}\n  //           {...(item.route ? routeComponent : linkComponent)}\n  //           display=\"flex\"\n  //           justifyContent=\"space-between\"\n  //           alignItems=\"center\"\n  //           variant=\"button\"\n  //           textTransform=\"capitalize\"\n  //           minWidth={item.description ? \"14rem\" : \"12rem\"}\n  //           color={item.description ? \"dark\" : \"text\"}\n  //           fontWeight={item.description ? \"bold\" : \"regular\"}\n  //           py={item.description ? 1 : 0.625}\n  //           px={2}\n  //           sx={({ palette: { grey, dark }, borders: { borderRadius } }) => ({\n  //             borderRadius: borderRadius.md,\n  //             cursor: \"pointer\",\n  //             transition: \"all 300ms linear\",\n\n  //             \"&:hover\": {\n  //               backgroundColor: grey[200],\n  //               color: dark.main,\n\n  //               \"& *\": {\n  //                 color: dark.main,\n  //               },\n  //             },\n  //           })}\n  //           onMouseEnter={({ currentTarget }) => {\n  //             if (item.dropdown) {\n  //               setNestedDropdown(currentTarget);\n  //               setNestedDropdownEl(currentTarget);\n  //               setNestedDropdownName(item.name);\n  //             }\n  //           }}\n  //           onMouseLeave={() => {\n  //             if (item.dropdown) {\n  //               setNestedDropdown(null);\n  //             }\n  //           }}\n  //         >\n  //           {item.description ? (\n  //             <MKBox>\n  //               {item.name}\n  //               <MKTypography\n  //                 display=\"block\"\n  //                 variant=\"button\"\n  //                 color=\"text\"\n  //                 fontWeight=\"regular\"\n  //                 sx={{ transition: \"all 300ms linear\" }}\n  //               >\n  //                 {item.description}\n  //               </MKTypography>\n  //             </MKBox>\n  //           ) : (\n  //             item.name\n  //           )}\n  //           {item.collapse && (\n  //             <Icon\n  //               fontSize=\"small\"\n  //               sx={{ fontWeight: \"normal\", verticalAlign: \"middle\", mr: -0.5 }}\n  //             >\n  //               keyboard_arrow_right\n  //             </Icon>\n  //           )}\n  //         </MKTypography>\n  //       );\n  //     });\n  //   }\n\n  //   return template;\n  // });\n\n  // Routes dropdown menu\n  const dropdownMenu = /*#__PURE__*/_jsxDEV(Popper, {\n    anchorEl: dropdown,\n    popperRef: null,\n    open: Boolean(dropdown),\n    placement: \"top-start\",\n    transition: true,\n    style: {\n      zIndex: 10\n    },\n    modifiers: [{\n      name: \"arrow\",\n      enabled: true,\n      options: {\n        element: arrowRef\n      }\n    }],\n    onMouseEnter: () => setDropdown(dropdownEl),\n    onMouseLeave: () => {\n      if (!nestedDropdown) {\n        setDropdown(null);\n        setDropdownName(\"\");\n      }\n    },\n    children: ({\n      TransitionProps\n    }) => /*#__PURE__*/_jsxDEV(Grow, {\n      ...TransitionProps,\n      sx: {\n        transformOrigin: \"left top\",\n        background: ({\n          palette: {\n            white\n          }\n        }) => white.main\n      },\n      children: /*#__PURE__*/_jsxDEV(MKBox, {\n        borderRadius: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(MKTypography, {\n          variant: \"h1\",\n          color: \"white\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            ref: setArrowRef,\n            sx: {\n              mt: -3\n            },\n            children: \"arrow_drop_up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MKBox, {\n          shadow: \"lg\",\n          borderRadius: \"lg\",\n          p: 2,\n          mt: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n\n  // Render routes that are nested inside the dropdown menu routes\n  const renderNestedRoutes = routes.map(({\n    collapse,\n    columns\n  }) => collapse && !columns ? collapse.map(({\n    name: parentName,\n    collapse: nestedCollapse\n  }) => {\n    let template;\n    if (parentName === nestedDropdownName) {\n      template = nestedCollapse && nestedCollapse.map(item => {\n        const linkComponent = {\n          component: MuiLink,\n          href: item.href,\n          target: \"_blank\",\n          rel: \"noreferrer\"\n        };\n        const routeComponent = {\n          component: Link,\n          to: item.route\n        };\n        return /*#__PURE__*/_jsxDEV(MKTypography, {\n          ...(item.route ? routeComponent : linkComponent),\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          variant: \"button\",\n          textTransform: \"capitalize\",\n          minWidth: item.description ? \"14rem\" : \"12rem\",\n          color: item.description ? \"dark\" : \"text\",\n          fontWeight: item.description ? \"bold\" : \"regular\",\n          py: item.description ? 1 : 0.625,\n          px: 2,\n          sx: ({\n            palette: {\n              grey,\n              dark\n            },\n            borders: {\n              borderRadius\n            }\n          }) => ({\n            borderRadius: borderRadius.md,\n            cursor: \"pointer\",\n            transition: \"all 300ms linear\",\n            \"&:hover\": {\n              backgroundColor: grey[200],\n              color: dark.main,\n              \"& *\": {\n                color: dark.main\n              }\n            }\n          }),\n          children: [item.description ? /*#__PURE__*/_jsxDEV(MKBox, {\n            children: [item.name, /*#__PURE__*/_jsxDEV(MKTypography, {\n              display: \"block\",\n              variant: \"button\",\n              color: \"text\",\n              fontWeight: \"regular\",\n              sx: {\n                transition: \"all 300ms linear\"\n              },\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 23\n          }, this) : item.name, item.collapse && /*#__PURE__*/_jsxDEV(Icon, {\n            fontSize: \"small\",\n            sx: {\n              fontWeight: \"normal\",\n              verticalAlign: \"middle\",\n              mr: -0.5\n            },\n            children: \"keyboard_arrow_right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 23\n          }, this)]\n        }, item.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 19\n        }, this);\n      });\n    }\n    return template;\n  }) : null);\n\n  // Dropdown menu for the nested dropdowns\n  const nestedDropdownMenu = /*#__PURE__*/_jsxDEV(Popper, {\n    anchorEl: nestedDropdown,\n    popperRef: null,\n    open: Boolean(nestedDropdown),\n    placement: \"right-start\",\n    transition: true,\n    style: {\n      zIndex: 10\n    },\n    onMouseEnter: () => {\n      setNestedDropdown(nestedDropdownEl);\n    },\n    onMouseLeave: () => {\n      setNestedDropdown(null);\n      setNestedDropdownName(\"\");\n      setDropdown(null);\n    },\n    children: ({\n      TransitionProps\n    }) => /*#__PURE__*/_jsxDEV(Grow, {\n      ...TransitionProps,\n      sx: {\n        transformOrigin: \"left top\",\n        background: ({\n          palette: {\n            white\n          }\n        }) => white.main\n      },\n      children: /*#__PURE__*/_jsxDEV(MKBox, {\n        ml: 2.5,\n        mt: -2.5,\n        borderRadius: \"lg\",\n        children: /*#__PURE__*/_jsxDEV(MKBox, {\n          shadow: \"lg\",\n          borderRadius: \"lg\",\n          py: 1.5,\n          px: 1,\n          mt: 2,\n          children: renderNestedRoutes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 418,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: sticky ? {\n      position: \"sticky\",\n      top: 0,\n      zIndex: 10\n    } : null,\n    children: [/*#__PURE__*/_jsxDEV(MKBox, {\n      py: 1,\n      px: {\n        xs: 4,\n        sm: transparent ? 2 : 3,\n        lg: transparent ? 0 : 2\n      },\n      my: relative ? 0 : 2,\n      mx: relative ? 0 : 3,\n      width: relative ? \"100%\" : \"calc(100% - 48px)\",\n      borderRadius: \"xl\",\n      shadow: transparent ? \"none\" : \"md\",\n      color: light ? \"white\" : \"dark\",\n      position: relative ? \"relative\" : \"absolute\",\n      left: 0,\n      zIndex: 3,\n      sx: ({\n        palette: {\n          transparent: transparentColor,\n          white\n        },\n        functions: {\n          rgba\n        }\n      }) => ({\n        backgroundColor: transparent ? transparentColor.main : rgba(white.main, 0.8),\n        backdropFilter: transparent ? \"none\" : `saturate(200%) blur(30px)`\n      }),\n      children: [/*#__PURE__*/_jsxDEV(MKBox, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(MKBox, {\n          component: Link,\n          to: \"/\",\n          lineHeight: 1,\n          py: transparent ? 1.5 : 0.75,\n          pl: relative || transparent ? 0 : {\n            xs: 0,\n            lg: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(MKTypography, {\n            variant: \"button\",\n            fontWeight: \"bold\",\n            color: light ? \"white\" : \"dark\",\n            children: brand\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MKBox, {\n          color: \"inherit\",\n          display: {\n            xs: \"none\",\n            lg: \"flex\"\n          },\n          ml: \"auto\",\n          mr: center ? \"auto\" : 0,\n          children: renderNavbarItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MKBox, {\n          ml: {\n            xs: \"auto\",\n            lg: 0\n          },\n          children: action && (action.type === \"internal\" ? /*#__PURE__*/_jsxDEV(MKButton, {\n            component: Link,\n            to: action.route,\n            variant: action.color === \"white\" || action.color === \"default\" ? \"contained\" : \"gradient\",\n            color: action.color ? action.color : \"info\",\n            size: \"small\",\n            children: action.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(MKButton, {\n            component: \"a\",\n            href: action.route,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            variant: action.color === \"white\" || action.color === \"default\" ? \"contained\" : \"gradient\",\n            color: action.color ? action.color : \"info\",\n            size: \"small\",\n            children: action.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MKBox, {\n          display: {\n            xs: \"inline-block\",\n            lg: \"none\"\n          },\n          lineHeight: 0,\n          py: 1.5,\n          pl: 1.5,\n          color: transparent ? \"white\" : \"inherit\",\n          sx: {\n            cursor: \"pointer\"\n          },\n          onClick: openMobileNavbar,\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            fontSize: \"default\",\n            children: mobileNavbar ? \"close\" : \"menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MKBox, {\n        bgColor: transparent ? \"white\" : \"transparent\",\n        shadow: transparent ? \"lg\" : \"none\",\n        borderRadius: \"xl\",\n        px: transparent ? 2 : 0,\n        children: mobileView && /*#__PURE__*/_jsxDEV(DefaultNavbarMobile, {\n          routes: routes,\n          open: mobileNavbar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this), dropdownMenu, nestedDropdownMenu]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 453,\n    columnNumber: 5\n  }, this);\n}\n\n// Setting default values for the props of DefaultNavbar\n_s(DefaultNavbar, \"yFt4hkiRqhBPf0XDYmzOEM6uhUg=\");\n_c = DefaultNavbar;\nDefaultNavbar.defaultProps = {\n  // brand: \"Justin Wang\",\n  transparent: false,\n  light: false,\n  action: false,\n  sticky: false,\n  relative: false,\n  center: false\n};\n\n// Typechecking props for the DefaultNavbar\nDefaultNavbar.propTypes = {\n  brand: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.shape).isRequired,\n  transparent: PropTypes.bool,\n  light: PropTypes.bool,\n  action: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({\n    type: PropTypes.oneOf([\"external\", \"internal\"]).isRequired,\n    route: PropTypes.string.isRequired,\n    color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\", \"light\", \"default\", \"white\"]),\n    label: PropTypes.string.isRequired\n  })]),\n  sticky: PropTypes.bool,\n  relative: PropTypes.bool,\n  center: PropTypes.bool\n};\nexport default DefaultNavbar;\nvar _c;\n$RefreshReg$(_c, \"DefaultNavbar\");","map":{"version":3,"names":["Fragment","useState","useEffect","Link","PropTypes","Container","Icon","Popper","Grow","Grid","Divider","MuiLink","MKBox","MKTypography","MKButton","DefaultNavbarDropdown","DefaultNavbarMobile","breakpoints","jsxDEV","_jsxDEV","DefaultNavbar","brand","routes","transparent","light","action","sticky","relative","center","_s","dropdown","setDropdown","dropdownEl","setDropdownEl","dropdownName","setDropdownName","nestedDropdown","setNestedDropdown","nestedDropdownEl","setNestedDropdownEl","nestedDropdownName","setNestedDropdownName","arrowRef","setArrowRef","mobileNavbar","setMobileNavbar","mobileView","setMobileView","openMobileNavbar","displayMobileNavbar","window","innerWidth","values","lg","addEventListener","removeEventListener","renderNavbarItems","map","name","icon","href","route","collapse","Boolean","onMouseEnter","currentTarget","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","dropdownMenu","anchorEl","popperRef","open","placement","transition","style","zIndex","modifiers","enabled","options","element","children","TransitionProps","sx","transformOrigin","background","palette","white","main","borderRadius","variant","color","ref","mt","shadow","p","renderNestedRoutes","columns","parentName","nestedCollapse","template","item","linkComponent","component","target","rel","routeComponent","to","display","justifyContent","alignItems","textTransform","minWidth","description","fontWeight","py","px","grey","dark","borders","md","cursor","backgroundColor","fontSize","verticalAlign","mr","nestedDropdownMenu","ml","position","top","xs","sm","my","mx","width","left","transparentColor","functions","rgba","backdropFilter","lineHeight","pl","type","size","label","onClick","bgColor","_c","defaultProps","propTypes","string","arrayOf","shape","isRequired","bool","oneOfType","oneOf","$RefreshReg$"],"sources":["/Users/justin/portfolio/src/examples/Navbars/DefaultNavbar/index.js"],"sourcesContent":["/* eslint-disable no-param-reassign */\n/**\n=========================================================\n* Material Kit 2 React - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-kit-react\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\n\nimport { Fragment, useState, useEffect } from \"react\";\n\n// react-router components\nimport { Link } from \"react-router-dom\";\n\n// prop-types is a library for typechecking of props.\nimport PropTypes from \"prop-types\";\n\n// @mui material components\nimport Container from \"@mui/material/Container\";\nimport Icon from \"@mui/material/Icon\";\nimport Popper from \"@mui/material/Popper\";\nimport Grow from \"@mui/material/Grow\";\nimport Grid from \"@mui/material/Grid\";\nimport Divider from \"@mui/material/Divider\";\nimport MuiLink from \"@mui/material/Link\";\n\n// Material Kit 2 React components\nimport MKBox from \"components/MKBox\";\nimport MKTypography from \"components/MKTypography\";\nimport MKButton from \"components/MKButton\";\n\n// Material Kit 2 React example components\nimport DefaultNavbarDropdown from \"examples/Navbars/DefaultNavbar/DefaultNavbarDropdown\";\nimport DefaultNavbarMobile from \"examples/Navbars/DefaultNavbar/DefaultNavbarMobile\";\n\n// Material Kit 2 React base styles\nimport breakpoints from \"assets/theme/base/breakpoints\";\n\nfunction DefaultNavbar({ brand, routes, transparent, light, action, sticky, relative, center }) {\n  const [dropdown, setDropdown] = useState(\"\");\n  const [dropdownEl, setDropdownEl] = useState(\"\");\n  const [dropdownName, setDropdownName] = useState(\"\");\n  const [nestedDropdown, setNestedDropdown] = useState(\"\");\n  const [nestedDropdownEl, setNestedDropdownEl] = useState(\"\");\n  const [nestedDropdownName, setNestedDropdownName] = useState(\"\");\n  const [arrowRef, setArrowRef] = useState(null);\n  const [mobileNavbar, setMobileNavbar] = useState(false);\n  const [mobileView, setMobileView] = useState(false);\n\n  const openMobileNavbar = () => setMobileNavbar(!mobileNavbar);\n\n  useEffect(() => {\n    // A function that sets the display state for the DefaultNavbarMobile.\n    function displayMobileNavbar() {\n      if (window.innerWidth < breakpoints.values.lg) {\n        setMobileView(true);\n        setMobileNavbar(false);\n      } else {\n        setMobileView(false);\n        setMobileNavbar(false);\n      }\n    }\n\n    /** \n     The event listener that's calling the displayMobileNavbar function when \n     resizing the window.\n    */\n    window.addEventListener(\"resize\", displayMobileNavbar);\n\n    // Call the displayMobileNavbar function to set the state with the initial value.\n    displayMobileNavbar();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", displayMobileNavbar);\n  }, []);\n\n  const renderNavbarItems = routes.map(({ name, icon, href, route, collapse }) => (\n    <DefaultNavbarDropdown\n      key={name}\n      name={name}\n      icon={icon}\n      href={href}\n      route={route}\n      collapse={Boolean(collapse)}\n      onMouseEnter={({ currentTarget }) => {\n        if (collapse) {\n          setDropdown(currentTarget);\n          setDropdownEl(currentTarget);\n          setDropdownName(name);\n        }\n      }}\n      onMouseLeave={() => collapse && setDropdown(null)}\n      light={light}\n    />\n  ));\n\n  // Render the routes on the dropdown menu\n  // const renderRoutes = routes.map(({ name, collapse, columns, rowsPerColumn }) => {\n  //   let template;\n\n  //   // Render the dropdown menu that should be display as columns\n  //   if (collapse && columns && name === dropdownName) {\n  //     const calculateColumns = collapse.reduce((resultArray, item, index) => {\n  //       const chunkIndex = Math.floor(index / rowsPerColumn);\n\n  //       if (!resultArray[chunkIndex]) {\n  //         resultArray[chunkIndex] = [];\n  //       }\n\n  //       resultArray[chunkIndex].push(item);\n\n  //       return resultArray;\n  //     }, []);\n\n  //     template = (\n  //       <Grid key={name} container spacing={3} py={1} px={1.5}>\n  //         {calculateColumns.map((cols, key) => {\n  //           const gridKey = `grid-${key}`;\n  //           const dividerKey = `divider-${key}`;\n\n  //           return (\n  //             <Grid key={gridKey} item xs={12 / columns} sx={{ position: \"relative\" }}>\n  //               {cols.map((col, index) => (\n  //                 <Fragment key={col.name}>\n  //                   <MKTypography\n  //                     display=\"block\"\n  //                     variant=\"button\"\n  //                     fontWeight=\"bold\"\n  //                     textTransform=\"capitalize\"\n  //                     py={1}\n  //                     px={0.5}\n  //                     mt={index !== 0 ? 2 : 0}\n  //                   >\n  //                     {col.name}\n  //                   </MKTypography>\n  //                   {col.collapse.map((item) => (\n  //                     <MKTypography\n  //                       key={item.name}\n  //                       component={item.route ? Link : MuiLink}\n  //                       to={item.route ? item.route : \"\"}\n  //                       href={item.href ? item.href : (e) => e.preventDefault()}\n  //                       target={item.href ? \"_blank\" : \"\"}\n  //                       rel={item.href ? \"noreferrer\" : \"noreferrer\"}\n  //                       minWidth=\"11.25rem\"\n  //                       display=\"block\"\n  //                       variant=\"button\"\n  //                       color=\"text\"\n  //                       textTransform=\"capitalize\"\n  //                       fontWeight=\"regular\"\n  //                       py={0.625}\n  //                       px={2}\n  //                       sx={({ palette: { grey, dark }, borders: { borderRadius } }) => ({\n  //                         borderRadius: borderRadius.md,\n  //                         cursor: \"pointer\",\n  //                         transition: \"all 300ms linear\",\n\n  //                         \"&:hover\": {\n  //                           backgroundColor: grey[200],\n  //                           color: dark.main,\n  //                         },\n  //                       })}\n  //                     >\n  //                       {item.name}\n  //                     </MKTypography>\n  //                   ))}\n  //                 </Fragment>\n  //               ))}\n  //               {key !== 0 && (\n  //                 <Divider\n  //                   key={dividerKey}\n  //                   orientation=\"vertical\"\n  //                   sx={{\n  //                     position: \"absolute\",\n  //                     top: \"50%\",\n  //                     left: \"-4px\",\n  //                     transform: \"translateY(-45%)\",\n  //                     height: \"90%\",\n  //                   }}\n  //                 />\n  //               )}\n  //             </Grid>\n  //           );\n  //         })}\n  //       </Grid>\n  //     );\n\n  //     // Render the dropdown menu that should be display as list items\n  //   } else if (collapse && name === dropdownName) {\n  //     template = collapse.map((item) => {\n  //       const linkComponent = {\n  //         component: MuiLink,\n  //         href: item.href,\n  //         target: \"_blank\",\n  //         rel: \"noreferrer\",\n  //       };\n\n  //       const routeComponent = {\n  //         component: Link,\n  //         to: item.route,\n  //       };\n\n  //       return (\n  //         <MKTypography\n  //           key={item.name}\n  //           {...(item.route ? routeComponent : linkComponent)}\n  //           display=\"flex\"\n  //           justifyContent=\"space-between\"\n  //           alignItems=\"center\"\n  //           variant=\"button\"\n  //           textTransform=\"capitalize\"\n  //           minWidth={item.description ? \"14rem\" : \"12rem\"}\n  //           color={item.description ? \"dark\" : \"text\"}\n  //           fontWeight={item.description ? \"bold\" : \"regular\"}\n  //           py={item.description ? 1 : 0.625}\n  //           px={2}\n  //           sx={({ palette: { grey, dark }, borders: { borderRadius } }) => ({\n  //             borderRadius: borderRadius.md,\n  //             cursor: \"pointer\",\n  //             transition: \"all 300ms linear\",\n\n  //             \"&:hover\": {\n  //               backgroundColor: grey[200],\n  //               color: dark.main,\n\n  //               \"& *\": {\n  //                 color: dark.main,\n  //               },\n  //             },\n  //           })}\n  //           onMouseEnter={({ currentTarget }) => {\n  //             if (item.dropdown) {\n  //               setNestedDropdown(currentTarget);\n  //               setNestedDropdownEl(currentTarget);\n  //               setNestedDropdownName(item.name);\n  //             }\n  //           }}\n  //           onMouseLeave={() => {\n  //             if (item.dropdown) {\n  //               setNestedDropdown(null);\n  //             }\n  //           }}\n  //         >\n  //           {item.description ? (\n  //             <MKBox>\n  //               {item.name}\n  //               <MKTypography\n  //                 display=\"block\"\n  //                 variant=\"button\"\n  //                 color=\"text\"\n  //                 fontWeight=\"regular\"\n  //                 sx={{ transition: \"all 300ms linear\" }}\n  //               >\n  //                 {item.description}\n  //               </MKTypography>\n  //             </MKBox>\n  //           ) : (\n  //             item.name\n  //           )}\n  //           {item.collapse && (\n  //             <Icon\n  //               fontSize=\"small\"\n  //               sx={{ fontWeight: \"normal\", verticalAlign: \"middle\", mr: -0.5 }}\n  //             >\n  //               keyboard_arrow_right\n  //             </Icon>\n  //           )}\n  //         </MKTypography>\n  //       );\n  //     });\n  //   }\n\n  //   return template;\n  // });\n\n  // Routes dropdown menu\n  const dropdownMenu = (\n    <Popper\n      anchorEl={dropdown}\n      popperRef={null}\n      open={Boolean(dropdown)}\n      placement=\"top-start\"\n      transition\n      style={{ zIndex: 10 }}\n      modifiers={[\n        {\n          name: \"arrow\",\n          enabled: true,\n          options: {\n            element: arrowRef,\n          },\n        },\n      ]}\n      onMouseEnter={() => setDropdown(dropdownEl)}\n      onMouseLeave={() => {\n        if (!nestedDropdown) {\n          setDropdown(null);\n          setDropdownName(\"\");\n        }\n      }}\n    >\n      {({ TransitionProps }) => (\n        <Grow\n          {...TransitionProps}\n          sx={{\n            transformOrigin: \"left top\",\n            background: ({ palette: { white } }) => white.main,\n          }}\n        >\n          <MKBox borderRadius=\"lg\">\n            <MKTypography variant=\"h1\" color=\"white\">\n              <Icon ref={setArrowRef} sx={{ mt: -3 }}>\n                arrow_drop_up\n              </Icon>\n            </MKTypography>\n            <MKBox shadow=\"lg\" borderRadius=\"lg\" p={2} mt={2}>\n              {/* {renderRoutes} */}\n            </MKBox>\n          </MKBox>\n        </Grow>\n      )}\n    </Popper>\n  );\n\n  // Render routes that are nested inside the dropdown menu routes\n  const renderNestedRoutes = routes.map(({ collapse, columns }) =>\n    collapse && !columns\n      ? collapse.map(({ name: parentName, collapse: nestedCollapse }) => {\n          let template;\n\n          if (parentName === nestedDropdownName) {\n            template =\n              nestedCollapse &&\n              nestedCollapse.map((item) => {\n                const linkComponent = {\n                  component: MuiLink,\n                  href: item.href,\n                  target: \"_blank\",\n                  rel: \"noreferrer\",\n                };\n\n                const routeComponent = {\n                  component: Link,\n                  to: item.route,\n                };\n\n                return (\n                  <MKTypography\n                    key={item.name}\n                    {...(item.route ? routeComponent : linkComponent)}\n                    display=\"flex\"\n                    justifyContent=\"space-between\"\n                    alignItems=\"center\"\n                    variant=\"button\"\n                    textTransform=\"capitalize\"\n                    minWidth={item.description ? \"14rem\" : \"12rem\"}\n                    color={item.description ? \"dark\" : \"text\"}\n                    fontWeight={item.description ? \"bold\" : \"regular\"}\n                    py={item.description ? 1 : 0.625}\n                    px={2}\n                    sx={({ palette: { grey, dark }, borders: { borderRadius } }) => ({\n                      borderRadius: borderRadius.md,\n                      cursor: \"pointer\",\n                      transition: \"all 300ms linear\",\n\n                      \"&:hover\": {\n                        backgroundColor: grey[200],\n                        color: dark.main,\n\n                        \"& *\": {\n                          color: dark.main,\n                        },\n                      },\n                    })}\n                  >\n                    {item.description ? (\n                      <MKBox>\n                        {item.name}\n                        <MKTypography\n                          display=\"block\"\n                          variant=\"button\"\n                          color=\"text\"\n                          fontWeight=\"regular\"\n                          sx={{ transition: \"all 300ms linear\" }}\n                        >\n                          {item.description}\n                        </MKTypography>\n                      </MKBox>\n                    ) : (\n                      item.name\n                    )}\n                    {item.collapse && (\n                      <Icon\n                        fontSize=\"small\"\n                        sx={{ fontWeight: \"normal\", verticalAlign: \"middle\", mr: -0.5 }}\n                      >\n                        keyboard_arrow_right\n                      </Icon>\n                    )}\n                  </MKTypography>\n                );\n              });\n          }\n\n          return template;\n        })\n      : null\n  );\n\n  // Dropdown menu for the nested dropdowns\n  const nestedDropdownMenu = (\n    <Popper\n      anchorEl={nestedDropdown}\n      popperRef={null}\n      open={Boolean(nestedDropdown)}\n      placement=\"right-start\"\n      transition\n      style={{ zIndex: 10 }}\n      onMouseEnter={() => {\n        setNestedDropdown(nestedDropdownEl);\n      }}\n      onMouseLeave={() => {\n        setNestedDropdown(null);\n        setNestedDropdownName(\"\");\n        setDropdown(null);\n      }}\n    >\n      {({ TransitionProps }) => (\n        <Grow\n          {...TransitionProps}\n          sx={{\n            transformOrigin: \"left top\",\n            background: ({ palette: { white } }) => white.main,\n          }}\n        >\n          <MKBox ml={2.5} mt={-2.5} borderRadius=\"lg\">\n            <MKBox shadow=\"lg\" borderRadius=\"lg\" py={1.5} px={1} mt={2}>\n              {renderNestedRoutes}\n            </MKBox>\n          </MKBox>\n        </Grow>\n      )}\n    </Popper>\n  );\n\n  return (\n    <Container sx={sticky ? { position: \"sticky\", top: 0, zIndex: 10 } : null}>\n      <MKBox\n        py={1}\n        px={{ xs: 4, sm: transparent ? 2 : 3, lg: transparent ? 0 : 2 }}\n        my={relative ? 0 : 2}\n        mx={relative ? 0 : 3}\n        width={relative ? \"100%\" : \"calc(100% - 48px)\"}\n        borderRadius=\"xl\"\n        shadow={transparent ? \"none\" : \"md\"}\n        color={light ? \"white\" : \"dark\"}\n        position={relative ? \"relative\" : \"absolute\"}\n        left={0}\n        zIndex={3}\n        sx={({ palette: { transparent: transparentColor, white }, functions: { rgba } }) => ({\n          backgroundColor: transparent ? transparentColor.main : rgba(white.main, 0.8),\n          backdropFilter: transparent ? \"none\" : `saturate(200%) blur(30px)`,\n        })}\n      >\n        <MKBox display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <MKBox\n            component={Link}\n            to=\"/\"\n            lineHeight={1}\n            py={transparent ? 1.5 : 0.75}\n            pl={relative || transparent ? 0 : { xs: 0, lg: 1 }}\n          >\n            <MKTypography variant=\"button\" fontWeight=\"bold\" color={light ? \"white\" : \"dark\"}>\n              {brand}\n            </MKTypography>\n          </MKBox>\n          <MKBox\n            color=\"inherit\"\n            display={{ xs: \"none\", lg: \"flex\" }}\n            ml=\"auto\"\n            mr={center ? \"auto\" : 0}\n          >\n            {renderNavbarItems}\n          </MKBox>\n          <MKBox ml={{ xs: \"auto\", lg: 0 }}>\n            {action &&\n              (action.type === \"internal\" ? (\n                <MKButton\n                  component={Link}\n                  to={action.route}\n                  variant={\n                    action.color === \"white\" || action.color === \"default\"\n                      ? \"contained\"\n                      : \"gradient\"\n                  }\n                  color={action.color ? action.color : \"info\"}\n                  size=\"small\"\n                >\n                  {action.label}\n                </MKButton>\n              ) : (\n                <MKButton\n                  component=\"a\"\n                  href={action.route}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  variant={\n                    action.color === \"white\" || action.color === \"default\"\n                      ? \"contained\"\n                      : \"gradient\"\n                  }\n                  color={action.color ? action.color : \"info\"}\n                  size=\"small\"\n                >\n                  {action.label}\n                </MKButton>\n              ))}\n          </MKBox>\n          <MKBox\n            display={{ xs: \"inline-block\", lg: \"none\" }}\n            lineHeight={0}\n            py={1.5}\n            pl={1.5}\n            color={transparent ? \"white\" : \"inherit\"}\n            sx={{ cursor: \"pointer\" }}\n            onClick={openMobileNavbar}\n          >\n            <Icon fontSize=\"default\">{mobileNavbar ? \"close\" : \"menu\"}</Icon>\n          </MKBox>\n        </MKBox>\n        <MKBox\n          bgColor={transparent ? \"white\" : \"transparent\"}\n          shadow={transparent ? \"lg\" : \"none\"}\n          borderRadius=\"xl\"\n          px={transparent ? 2 : 0}\n        >\n          {mobileView && <DefaultNavbarMobile routes={routes} open={mobileNavbar} />}\n        </MKBox>\n      </MKBox>\n      {dropdownMenu}\n      {nestedDropdownMenu}\n    </Container>\n  );\n}\n\n// Setting default values for the props of DefaultNavbar\nDefaultNavbar.defaultProps = {\n  // brand: \"Justin Wang\",\n  transparent: false,\n  light: false,\n  action: false,\n  sticky: false,\n  relative: false,\n  center: false,\n};\n\n// Typechecking props for the DefaultNavbar\nDefaultNavbar.propTypes = {\n  brand: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.shape).isRequired,\n  transparent: PropTypes.bool,\n  light: PropTypes.bool,\n  action: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.shape({\n      type: PropTypes.oneOf([\"external\", \"internal\"]).isRequired,\n      route: PropTypes.string.isRequired,\n      color: PropTypes.oneOf([\n        \"primary\",\n        \"secondary\",\n        \"info\",\n        \"success\",\n        \"warning\",\n        \"error\",\n        \"dark\",\n        \"light\",\n        \"default\",\n        \"white\",\n      ]),\n      label: PropTypes.string.isRequired,\n    }),\n  ]),\n  sticky: PropTypes.bool,\n  relative: PropTypes.bool,\n  center: PropTypes.bool,\n};\n\nexport default DefaultNavbar;\n"],"mappings":"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AM,GAdRkC,IAAI;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAeV,CACF,CAAC;;EAEF;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA,MAAMC,YAAY,gBAChBpD,OAAA,CAACZ,MAAM;IACLiE,QAAQ,EAAE1C,QAAS;IACnB2C,SAAS,EAAE,IAAK;IAChBC,IAAI,EAAEX,OAAO,CAACjC,QAAQ,CAAE;IACxB6C,SAAS,EAAC,WAAW;IACrBC,UAAU;IACVC,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAE;IACtBC,SAAS,EAAE,CACT;MACErB,IAAI,EAAE,OAAO;MACbsB,OAAO,EAAE,IAAI;MACbC,OAAO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"},"metadata":{},"sourceType":"module","externalDependencies":[]}