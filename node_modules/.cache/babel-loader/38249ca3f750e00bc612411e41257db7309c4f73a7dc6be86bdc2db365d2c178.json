{"ast":null,"code":"var _jsxFileName = \"/Users/justin/portfolio/src/pages/LandingPages/SignIn/DarkToggle.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { Switch } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkModeToggle = () => {\n  _s();\n  if (typeof window === 'undefined') {\n    // Never server-side render this, since we can't determine\n    // the correct initial state until we get to the client.\n    // Alternatively, use a loading placeholder here.\n    return null;\n  }\n  const [checked, setChecked] = useState(window.__theme === 'dark');\n  const onChange = useCallback(e => {\n    const isChecked = e.target.checked;\n    setChecked(isChecked);\n    window.__setPreferredTheme(isChecked ? 'dark' : 'light');\n  }, [setChecked]);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    checked: checked,\n    onChange: onChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n_s(DarkModeToggle, \"swZzn3bTxFXp4ZkHQs3ex9OsQt8=\");\n_c = DarkModeToggle;\nexport default DarkModeToggle;\nvar _c;\n$RefreshReg$(_c, \"DarkModeToggle\");","map":{"version":3,"names":["React","useCallback","useState","Switch","jsxDEV","_jsxDEV","DarkModeToggle","_s","window","checked","setChecked","__theme","onChange","e","isChecked","target","__setPreferredTheme","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/justin/portfolio/src/pages/LandingPages/SignIn/DarkToggle.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { Switch } from '@mui/material';\n\nconst DarkModeToggle = () => {\n  if (typeof window === 'undefined') {\n    // Never server-side render this, since we can't determine\n    // the correct initial state until we get to the client.\n    // Alternatively, use a loading placeholder here.\n    return null;\n  }\n\n  const [checked, setChecked] = useState(window.__theme === 'dark');\n\n  const onChange = useCallback(\n    e => {\n      const isChecked = e.target.checked;\n      setChecked(isChecked);\n      window.__setPreferredTheme(isChecked ? 'dark' : 'light');\n    },\n    [setChecked]\n  );\n\n  return <Switch checked={checked} onChange={onChange} />;\n};\n\nexport default DarkModeToggle;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IACjC;IACA;IACA;IACA,OAAO,IAAI;EACb;EAEA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAACM,MAAM,CAACG,OAAO,KAAK,MAAM,CAAC;EAEjE,MAAMC,QAAQ,GAAGX,WAAW,CAC1BY,CAAC,IAAI;IACH,MAAMC,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACN,OAAO;IAClCC,UAAU,CAACI,SAAS,CAAC;IACrBN,MAAM,CAACQ,mBAAmB,CAACF,SAAS,GAAG,MAAM,GAAG,OAAO,CAAC;EAC1D,CAAC,EACD,CAACJ,UAAU,CACb,CAAC;EAED,oBAAOL,OAAA,CAACF,MAAM;IAACM,OAAO,EAAEA,OAAQ;IAACG,QAAQ,EAAEA;EAAS;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzD,CAAC;AAACb,EAAA,CApBID,cAAc;AAAAe,EAAA,GAAdf,cAAc;AAsBpB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}